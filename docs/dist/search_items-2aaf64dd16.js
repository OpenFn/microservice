searchNodes=[{"doc":"Microservice keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Microservice.html","title":"Microservice","type":"module"},{"doc":"","ref":"Microservice.Engine.html","title":"Microservice.Engine","type":"module"},{"doc":"","ref":"Microservice.Engine.html#child_spec/1","title":"Microservice.Engine.child_spec/1","type":"function"},{"doc":"","ref":"Microservice.Engine.html#config/1","title":"Microservice.Engine.config/1","type":"function"},{"doc":"","ref":"Microservice.Engine.html#get_job_state/1","title":"Microservice.Engine.get_job_state/1","type":"function"},{"doc":"","ref":"Microservice.Engine.html#handle_message/1","title":"Microservice.Engine.handle_message/1","type":"function"},{"doc":"","ref":"Microservice.Engine.html#start_link/1","title":"Microservice.Engine.start_link/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use MicroserviceWeb, :controller use MicroserviceWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"MicroserviceWeb.html","title":"MicroserviceWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"MicroserviceWeb.html#__using__/1","title":"MicroserviceWeb.__using__/1","type":"macro"},{"doc":"","ref":"MicroserviceWeb.html#channel/0","title":"MicroserviceWeb.channel/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#controller/0","title":"MicroserviceWeb.controller/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#live_component/0","title":"MicroserviceWeb.live_component/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#live_view/0","title":"MicroserviceWeb.live_view/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#router/0","title":"MicroserviceWeb.router/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#view/0","title":"MicroserviceWeb.view/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.Endpoint.html","title":"MicroserviceWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"MicroserviceWeb.Endpoint.html#broadcast/3","title":"MicroserviceWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"MicroserviceWeb.Endpoint.html#broadcast!/3","title":"MicroserviceWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"MicroserviceWeb.Endpoint.html#broadcast_from/4","title":"MicroserviceWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"MicroserviceWeb.Endpoint.html#broadcast_from!/4","title":"MicroserviceWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"MicroserviceWeb.Endpoint.html#call/2","title":"MicroserviceWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"MicroserviceWeb.Endpoint.html#child_spec/1","title":"MicroserviceWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"MicroserviceWeb.Endpoint.html#config/2","title":"MicroserviceWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"MicroserviceWeb.Endpoint.html#config_change/2","title":"MicroserviceWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"MicroserviceWeb.Endpoint.html#host/0","title":"MicroserviceWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"MicroserviceWeb.Endpoint.html#init/1","title":"MicroserviceWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"MicroserviceWeb.Endpoint.html#local_broadcast/3","title":"MicroserviceWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"MicroserviceWeb.Endpoint.html#local_broadcast_from/4","title":"MicroserviceWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"MicroserviceWeb.Endpoint.html#path/1","title":"MicroserviceWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"MicroserviceWeb.Endpoint.html#script_name/0","title":"MicroserviceWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.Options:log_access_url - if the access url should be logged once the endpoint startsAll other options are merged into the endpoint configuration.","ref":"MicroserviceWeb.Endpoint.html#start_link/1","title":"MicroserviceWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"MicroserviceWeb.Endpoint.html#static_integrity/1","title":"MicroserviceWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"MicroserviceWeb.Endpoint.html#static_lookup/1","title":"MicroserviceWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"MicroserviceWeb.Endpoint.html#static_path/1","title":"MicroserviceWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"MicroserviceWeb.Endpoint.html#static_url/0","title":"MicroserviceWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"MicroserviceWeb.Endpoint.html#struct_url/0","title":"MicroserviceWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.Endpoint.html#subscribe/2","title":"MicroserviceWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Endpoint.html#unsubscribe/1","title":"MicroserviceWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"MicroserviceWeb.Endpoint.html#url/0","title":"MicroserviceWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"MicroserviceWeb.ErrorHelpers.html","title":"MicroserviceWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"MicroserviceWeb.ErrorHelpers.html#error_tag/2","title":"MicroserviceWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"MicroserviceWeb.ErrorHelpers.html#translate_error/1","title":"MicroserviceWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.ErrorView.html","title":"MicroserviceWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"MicroserviceWeb.ErrorView.html#__resource__/0","title":"MicroserviceWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"MicroserviceWeb.ErrorView.html#render/2","title":"MicroserviceWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"MicroserviceWeb.ErrorView.html#template_not_found/2","title":"MicroserviceWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import MicroserviceWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"MicroserviceWeb.Gettext.html","title":"MicroserviceWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"MicroserviceWeb.Gettext.html#dgettext/3","title":"MicroserviceWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"MicroserviceWeb.Gettext.html#dgettext_noop/2","title":"MicroserviceWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"MicroserviceWeb.Gettext.html#dngettext/5","title":"MicroserviceWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"MicroserviceWeb.Gettext.html#dngettext_noop/3","title":"MicroserviceWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"MicroserviceWeb.Gettext.html#dpgettext/4","title":"MicroserviceWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#dpgettext_noop/3","title":"MicroserviceWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"MicroserviceWeb.Gettext.html#dpngettext/6","title":"MicroserviceWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#dpngettext_noop/4","title":"MicroserviceWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"MicroserviceWeb.Gettext.html#gettext/2","title":"MicroserviceWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"MicroserviceWeb.Gettext.html#gettext_comment/1","title":"MicroserviceWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"MicroserviceWeb.Gettext.html#gettext_noop/1","title":"MicroserviceWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"MicroserviceWeb.Gettext.html#handle_missing_bindings/2","title":"MicroserviceWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"MicroserviceWeb.Gettext.html#handle_missing_plural_translation/6","title":"MicroserviceWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"MicroserviceWeb.Gettext.html#handle_missing_translation/4","title":"MicroserviceWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#lgettext/5","title":"MicroserviceWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#lngettext/7","title":"MicroserviceWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"MicroserviceWeb.Gettext.html#ngettext/4","title":"MicroserviceWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"MicroserviceWeb.Gettext.html#ngettext_noop/2","title":"MicroserviceWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"MicroserviceWeb.Gettext.html#pgettext/3","title":"MicroserviceWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#pgettext_noop/2","title":"MicroserviceWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"MicroserviceWeb.Gettext.html#pngettext/5","title":"MicroserviceWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#pngettext_noop/3","title":"MicroserviceWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"MicroserviceWeb.LayoutView.html","title":"MicroserviceWeb.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"MicroserviceWeb.LayoutView.html#__resource__/0","title":"MicroserviceWeb.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"MicroserviceWeb.LayoutView.html#render/2","title":"MicroserviceWeb.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"MicroserviceWeb.LayoutView.html#template_not_found/2","title":"MicroserviceWeb.LayoutView.template_not_found/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.PageLive.html","title":"MicroserviceWeb.PageLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.render/1.","ref":"MicroserviceWeb.PageLive.html#render/1","title":"MicroserviceWeb.PageLive.render/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Receiver.html","title":"MicroserviceWeb.Receiver","type":"module"},{"doc":"","ref":"MicroserviceWeb.Receiver.html#handle_sync/1","title":"MicroserviceWeb.Receiver.handle_sync/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Receiver.html#receive/2","title":"MicroserviceWeb.Receiver.receive/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.html","title":"MicroserviceWeb.Router","type":"module"},{"doc":"","ref":"MicroserviceWeb.Router.html#api/2","title":"MicroserviceWeb.Router.api/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.html#browser/2","title":"MicroserviceWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"MicroserviceWeb.Router.html#call/2","title":"MicroserviceWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"MicroserviceWeb.Router.html#init/1","title":"MicroserviceWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from MicroserviceWeb.Router.","ref":"MicroserviceWeb.Router.Helpers.html","title":"MicroserviceWeb.Router.Helpers","type":"module"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/2","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/3","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/4","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/5","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/2","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/3","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/4","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/5","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_path/2","title":"MicroserviceWeb.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_path/3","title":"MicroserviceWeb.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_url/2","title":"MicroserviceWeb.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_url/3","title":"MicroserviceWeb.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"MicroserviceWeb.Router.Helpers.html#path/2","title":"MicroserviceWeb.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_path/2","title":"MicroserviceWeb.Router.Helpers.receiver_path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_path/3","title":"MicroserviceWeb.Router.Helpers.receiver_path/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_url/2","title":"MicroserviceWeb.Router.Helpers.receiver_url/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_url/3","title":"MicroserviceWeb.Router.Helpers.receiver_url/3","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"MicroserviceWeb.Router.Helpers.html#static_integrity/2","title":"MicroserviceWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"MicroserviceWeb.Router.Helpers.html#static_path/2","title":"MicroserviceWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"MicroserviceWeb.Router.Helpers.html#static_url/2","title":"MicroserviceWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"MicroserviceWeb.Router.Helpers.html#url/1","title":"MicroserviceWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Telemetry.html","title":"MicroserviceWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"MicroserviceWeb.Telemetry.html#child_spec/1","title":"MicroserviceWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Telemetry.html#metrics/0","title":"MicroserviceWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.Telemetry.html#start_link/1","title":"MicroserviceWeb.Telemetry.start_link/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.UserSocket.html","title":"MicroserviceWeb.UserSocket","type":"module"},{"doc":"OpenFn/microservice","ref":"readme.html","title":"OpenFn/microservice","type":"extras"},{"doc":"OpenFn is used by numerous health and humanitarian organizations around the world to scale their programs through real-time interoperability, systems integration, and workflow automation. OpenFn/microservice makes use of OpenFn's open-core technology—namely OpenFn/core and the various OpenFn adaptors—to create standalone microservices which can be deployed on any hardware.This microservice approach helps to ensure that governments and NGOs are never locked-in to OpenFn's SaaS offering, and can port their existing jobs, triggers, and credentials from OpenFn.org to their own infrastructure easily.","ref":"readme.html#intent","title":"OpenFn/microservice - Intent","type":"extras"},{"doc":"Familiarity with other elements of OpenFn's open source integration toolkit is helpful:OpenFn/docsOpenFn/coreOpenFn/engineOpenFn/devtools","ref":"readme.html#prerequisites","title":"OpenFn/microservice - Prerequisites","type":"extras"},{"doc":"Assuming you've got an .env and a project directory with a project.yaml spec:docker run -v &lt;path-to-your-project-folder&gt;:/home/microservice/&lt;path-to-your-project-folder&gt; \\ --env-file ./&lt;path-to-your-env-file&gt; \\ --network host \\ openfn/microservice:v0.3.0","ref":"readme.html#docker-run","title":"OpenFn/microservice - Docker run","type":"extras"},{"doc":"Clone this repo with git clone git@github.com:OpenFn/microservice.gitEnter the directory with cd microserviceInstall dependencies with mix setupRun the tests with mix testMake a project directory to hold your project artifacts with mkdir sample-projectCreate a new project specification with cp project.yaml.example ./sample-project/project.yamlCreate a .env file with cp .env.example .envInstall necessary adaptors via npm install @openfn/language-http --prefix priv/openfn/runtime/node_modules --no-save --no-package-lock --global-styleStart your microservice server with env $(cat .env | grep -v &quot;#&quot; | xargs ) iex -S mix phx.serverUp and running inside DockerBuild a docker image with docker build -t openfn/microservice:v0.3.0 .Run with the docker run command","ref":"readme.html#development-up-and-running-guide","title":"OpenFn/microservice - Development up and running guide","type":"extras"},{"doc":"The sample project configuration file describes the example project setup to help you get acquainted with the structure of the jobs, language packs and triggers.By default microservice is configured with 4 sample jobs:job-1 is triggered when a matching message arrives to the inbox (see trigger-1).recurring-job is a timed job scheduled to run every minute and is linked to the every-minute cron trigger.flow-job and catch-job run after the success and failure of job-1, respectively.All of the jobs are configured with the language pack openfn/language-common.In the default sample configuration a new message posted to localhost:4000/inbox that matches trigger-1 (i.e. the message contains &quot;number&quot;:2) is greeted with an asynchronous acknowledgement receipt (HTTP 202 Data accepted and processing has begun) and will trigger job-1 to run.You can try this out with the following snippet:curl -X POST -H &quot;Content-Type: application/json&quot; \\ -d '{ &quot;number&quot;:2, &quot;surveyId&quot;: 37479 }' \\ http://localhost:4000/inboxPosting a message not matching any of the triggers (e.g. “number”:3) equally prompts an acknowledgement but doesn’t trigger any jobs.Example message post for this non-match scenario:curl -X POST -H &quot;Content-Type: application/json&quot; \\ -d '{ &quot;number&quot;:3, &quot;surveyId&quot;: 37479 }' \\ http://localhost:4000/inboxHTTP post requests made to localhost:4000/inbox will be processed by the Receiver, according to thecredential,expression, andadaptordefined in the project configurationYAMLfile. Time-based jobs will be run byEngineaccording to thecredential,expression, andadaptordefined in yourproject.yaml` file.","ref":"readme.html#sample-configuration","title":"OpenFn/microservice - Sample configuration","type":"extras"},{"doc":"ChangelogAll notable changes to this project will be documented in this file.The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","ref":"changelog.html","title":"Changelog","type":"extras"},{"doc":"AddedMultiple jobs per instanceFlow jobs run on success or failure triggersCredential configuration via YAMLChangedProjects are now configured via YAML, rather than .env files for greater flexibility. See updated README.RemovedRemoved Microservice.Repeater, cron is now handled by OpenFn/engine","ref":"changelog.html#0-3-0-2021-02-26","title":"Changelog - [0.3.0] - 2021-02-26","type":"extras"},{"doc":"AddedAn env based prototype that would run an OpenFn job via cron or trigger an OpenFn job via web request.","ref":"changelog.html#0-2-1-2020-12-04","title":"Changelog - [0.2.1] - 2020-12-04","type":"extras"}]