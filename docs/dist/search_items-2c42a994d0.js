searchNodes=[{"doc":"","ref":"Dispatcher.html","title":"Dispatcher","type":"module"},{"doc":"Run a job with the OpenFn/Core cli in an isolated NodeVM, given paths for state, expression, and final_state, killing that NodeVM after a specified number of seconds.","ref":"Dispatcher.html#execute/1","title":"Dispatcher.execute/1","type":"function"},{"doc":"Microservice keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Microservice.html","title":"Microservice","type":"module"},{"doc":"","ref":"Microservice.Repeater.html","title":"Microservice.Repeater","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Microservice.Repeater.html#child_spec/1","title":"Microservice.Repeater.child_spec/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1.","ref":"Microservice.Repeater.html#init/1","title":"Microservice.Repeater.init/1","type":"function"},{"doc":"","ref":"Microservice.Repeater.html#start_link/0","title":"Microservice.Repeater.start_link/0","type":"function"},{"doc":"","ref":"Microservice.Repeater.html#start_link/1","title":"Microservice.Repeater.start_link/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use MicroserviceWeb, :controller use MicroserviceWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"MicroserviceWeb.html","title":"MicroserviceWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"MicroserviceWeb.html#__using__/1","title":"MicroserviceWeb.__using__/1","type":"macro"},{"doc":"","ref":"MicroserviceWeb.html#channel/0","title":"MicroserviceWeb.channel/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#controller/0","title":"MicroserviceWeb.controller/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#live_component/0","title":"MicroserviceWeb.live_component/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#live_view/0","title":"MicroserviceWeb.live_view/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#router/0","title":"MicroserviceWeb.router/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.html#view/0","title":"MicroserviceWeb.view/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.Endpoint.html","title":"MicroserviceWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"MicroserviceWeb.Endpoint.html#broadcast/3","title":"MicroserviceWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"MicroserviceWeb.Endpoint.html#broadcast!/3","title":"MicroserviceWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"MicroserviceWeb.Endpoint.html#broadcast_from/4","title":"MicroserviceWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"MicroserviceWeb.Endpoint.html#broadcast_from!/4","title":"MicroserviceWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"MicroserviceWeb.Endpoint.html#call/2","title":"MicroserviceWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"MicroserviceWeb.Endpoint.html#child_spec/1","title":"MicroserviceWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"MicroserviceWeb.Endpoint.html#config/2","title":"MicroserviceWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"MicroserviceWeb.Endpoint.html#config_change/2","title":"MicroserviceWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"MicroserviceWeb.Endpoint.html#host/0","title":"MicroserviceWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"MicroserviceWeb.Endpoint.html#init/1","title":"MicroserviceWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"MicroserviceWeb.Endpoint.html#local_broadcast/3","title":"MicroserviceWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"MicroserviceWeb.Endpoint.html#local_broadcast_from/4","title":"MicroserviceWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"MicroserviceWeb.Endpoint.html#path/1","title":"MicroserviceWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"MicroserviceWeb.Endpoint.html#script_name/0","title":"MicroserviceWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"MicroserviceWeb.Endpoint.html#start_link/1","title":"MicroserviceWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"MicroserviceWeb.Endpoint.html#static_integrity/1","title":"MicroserviceWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"MicroserviceWeb.Endpoint.html#static_lookup/1","title":"MicroserviceWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"MicroserviceWeb.Endpoint.html#static_path/1","title":"MicroserviceWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"MicroserviceWeb.Endpoint.html#static_url/0","title":"MicroserviceWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"MicroserviceWeb.Endpoint.html#struct_url/0","title":"MicroserviceWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.Endpoint.html#subscribe/2","title":"MicroserviceWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Endpoint.html#unsubscribe/1","title":"MicroserviceWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"MicroserviceWeb.Endpoint.html#url/0","title":"MicroserviceWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"MicroserviceWeb.ErrorHelpers.html","title":"MicroserviceWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"MicroserviceWeb.ErrorHelpers.html#error_tag/2","title":"MicroserviceWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"MicroserviceWeb.ErrorHelpers.html#translate_error/1","title":"MicroserviceWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.ErrorView.html","title":"MicroserviceWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"MicroserviceWeb.ErrorView.html#__resource__/0","title":"MicroserviceWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"MicroserviceWeb.ErrorView.html#render/2","title":"MicroserviceWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"MicroserviceWeb.ErrorView.html#template_not_found/2","title":"MicroserviceWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import MicroserviceWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"MicroserviceWeb.Gettext.html","title":"MicroserviceWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"MicroserviceWeb.Gettext.html#dgettext/3","title":"MicroserviceWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"MicroserviceWeb.Gettext.html#dgettext_noop/2","title":"MicroserviceWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"MicroserviceWeb.Gettext.html#dngettext/5","title":"MicroserviceWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"MicroserviceWeb.Gettext.html#dngettext_noop/3","title":"MicroserviceWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"MicroserviceWeb.Gettext.html#dpgettext/4","title":"MicroserviceWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#dpgettext_noop/3","title":"MicroserviceWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"MicroserviceWeb.Gettext.html#dpngettext/6","title":"MicroserviceWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#dpngettext_noop/4","title":"MicroserviceWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"MicroserviceWeb.Gettext.html#gettext/2","title":"MicroserviceWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"MicroserviceWeb.Gettext.html#gettext_comment/1","title":"MicroserviceWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"MicroserviceWeb.Gettext.html#gettext_noop/1","title":"MicroserviceWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"MicroserviceWeb.Gettext.html#handle_missing_bindings/2","title":"MicroserviceWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"MicroserviceWeb.Gettext.html#handle_missing_plural_translation/6","title":"MicroserviceWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"MicroserviceWeb.Gettext.html#handle_missing_translation/4","title":"MicroserviceWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#lgettext/5","title":"MicroserviceWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#lngettext/7","title":"MicroserviceWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"MicroserviceWeb.Gettext.html#ngettext/4","title":"MicroserviceWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"MicroserviceWeb.Gettext.html#ngettext_noop/2","title":"MicroserviceWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"MicroserviceWeb.Gettext.html#pgettext/3","title":"MicroserviceWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#pgettext_noop/2","title":"MicroserviceWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"MicroserviceWeb.Gettext.html#pngettext/5","title":"MicroserviceWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"MicroserviceWeb.Gettext.html#pngettext_noop/3","title":"MicroserviceWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"MicroserviceWeb.LayoutView.html","title":"MicroserviceWeb.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"MicroserviceWeb.LayoutView.html#__resource__/0","title":"MicroserviceWeb.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"MicroserviceWeb.LayoutView.html#render/2","title":"MicroserviceWeb.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"MicroserviceWeb.LayoutView.html#template_not_found/2","title":"MicroserviceWeb.LayoutView.template_not_found/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.PageLive.html","title":"MicroserviceWeb.PageLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.render/1.","ref":"MicroserviceWeb.PageLive.html#render/1","title":"MicroserviceWeb.PageLive.render/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Receiver.html","title":"MicroserviceWeb.Receiver","type":"module"},{"doc":"","ref":"MicroserviceWeb.Receiver.html#receive/2","title":"MicroserviceWeb.Receiver.receive/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.html","title":"MicroserviceWeb.Router","type":"module"},{"doc":"","ref":"MicroserviceWeb.Router.html#api/2","title":"MicroserviceWeb.Router.api/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.html#browser/2","title":"MicroserviceWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"MicroserviceWeb.Router.html#call/2","title":"MicroserviceWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"MicroserviceWeb.Router.html#init/1","title":"MicroserviceWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from MicroserviceWeb.Router.","ref":"MicroserviceWeb.Router.Helpers.html","title":"MicroserviceWeb.Router.Helpers","type":"module"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/2","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/3","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/4","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_path/5","title":"MicroserviceWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/2","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/3","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/4","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#live_dashboard_url/5","title":"MicroserviceWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_path/2","title":"MicroserviceWeb.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_path/3","title":"MicroserviceWeb.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_url/2","title":"MicroserviceWeb.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#page_url/3","title":"MicroserviceWeb.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"MicroserviceWeb.Router.Helpers.html#path/2","title":"MicroserviceWeb.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_path/2","title":"MicroserviceWeb.Router.Helpers.receiver_path/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_path/3","title":"MicroserviceWeb.Router.Helpers.receiver_path/3","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_url/2","title":"MicroserviceWeb.Router.Helpers.receiver_url/2","type":"function"},{"doc":"","ref":"MicroserviceWeb.Router.Helpers.html#receiver_url/3","title":"MicroserviceWeb.Router.Helpers.receiver_url/3","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"MicroserviceWeb.Router.Helpers.html#static_integrity/2","title":"MicroserviceWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"MicroserviceWeb.Router.Helpers.html#static_path/2","title":"MicroserviceWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"MicroserviceWeb.Router.Helpers.html#static_url/2","title":"MicroserviceWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"MicroserviceWeb.Router.Helpers.html#url/1","title":"MicroserviceWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Telemetry.html","title":"MicroserviceWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"MicroserviceWeb.Telemetry.html#child_spec/1","title":"MicroserviceWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.Telemetry.html#metrics/0","title":"MicroserviceWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"MicroserviceWeb.Telemetry.html#start_link/1","title":"MicroserviceWeb.Telemetry.start_link/1","type":"function"},{"doc":"","ref":"MicroserviceWeb.UserSocket.html","title":"MicroserviceWeb.UserSocket","type":"module"},{"doc":"OpenFn/microservice","ref":"readme.html","title":"OpenFn/microservice","type":"extras"},{"doc":"OpenFn is used by numerous health and humanitarian organizations around the world to scale their programs through real-time interoperability, systems integration, and workflow automation. OpenFn/microservice makes use of OpenFn's open-core technology—namely OpenFn/core and the various OpenFn adaptors—to create standalone microservices which can be deployed on any hardware.This microservice approach helps to ensure that governments and NGOs are never locked-in to OpenFn's SaaS offering, and can port their existing jobs, triggers, and credentials from OpenFn.org to their own infrastructure easily.","ref":"readme.html#intent","title":"OpenFn/microservice - Intent","type":"extras"},{"doc":"git clone git@github.com:OpenFn/microservice.git &amp;&amp; cd microservice to clonedocker build -t openfn/microservice:v0.1.4 . to buildcp .env.example .env to configuredocker run --network host --env-file ./.env openfn/microservice:v0.1.4 to run","ref":"readme.html#docker-usage","title":"OpenFn/microservice - Docker usage","type":"extras"},{"doc":"Clone this repo with git clone git@github.com:OpenFn/microservice.gitEnter the directory with cd microserviceInstall dependencies with mix deps.getInstall Node.js dependencies with npm install --prefix ./assetsRun the tests with mix testCreate a .env file with cp .env.example .envStart your server with env $(cat .env | grep -v &quot;#&quot; | xargs ) iex -S mix phx.serverHTTP post requests made to localhost:4000/inbox will be processed by the job runner, accoridng to the credential, expression, and adaptor defined in your .env file.","ref":"readme.html#development-up-and-running-guide","title":"OpenFn/microservice - Development up and running guide","type":"extras"},{"doc":"Potential roadmap for this application[x] mix phx.server receives receipts and sends 201/202[x] Timer jobs can keep state (via Repeater and a simple GenServer)[x] endpoint gets URL and PORT from .env[x] Dispatcher picks up config from .env[x] Dispatcher executes it, given preloaded job, cred, adaptor, and core[x] Write tests for everything[x] Phoenix dashboard for visual performance monitoring.[ ] Pass project artifacts during docker run[ ] tmp files are deleted after job is run[ ] Chain jobs together (repliacte OpenFn.org &quot;flow&quot;)[ ] bring core out of package.json[ ] Dispatcher can pipe to stdout.[ ] Notifications module[ ] Better Logging[ ] Visual interface for application (Phx LiveView?)[ ] Message persistence plugin (enables retries)Dynamic Configuration required for MVPSee /project for project artifactsSee .env.example for a possible configurationSee Dockerfile to build a microserviceHow to make it shelf readyBuild and relaese a fully featured documentation site like OpenFn/docsMake fully InstantHIE compliant (including kubernetes.yaml)Build out openfn-devtools to include a script that pulls and configures microservice based one the current configuration of jobs and credentials in devtools.Click a button on OpenFn to prepare a microservice.zip which is this repo with a new Dockerfile, based on the current job's configuration at OpenFn.org (we're not just &quot;shelf ready&quot;, we're providing the shelf with a &quot;free forever&quot; project on our website.)An open-source jobs library.Jobs LibraryAll jobs that &quot;opt-in&quot; on OpenFn.org are exposed with an open API, which expects {adaptor, version, ...helperFunction} and returns the following—which includes both the jobs in the OpenFn.org database and the jobs in OpenFn/Docs/jobs:[ { &quot;expression&quot;: &quot;createTEI({})&quot;, &quot;active&quot;: true, &quot;runsLast90&quot;: 32178, &quot;successRateLast90&quot;: 0.973, &quot;source&quot;: &quot;openfn.org&quot; }, { ...job, &quot;source&quot;: &quot;openfn/docs&quot; } ]That API is consumed by the docs site (open source) AND by openfn.org so that it can use used to generate jobs with our free-forever projects.In the IDE on OpenFn.org, a user clicks DHIS2, then createTEI and it suggests that you look at the top 10 most successful/active dhis2:your-version expressions, searchable and copy/pastable.New jobs are automatically added to the library from OpenFn.org, and open-source users can submit pull requests to post their jobs to the OpenFn/docs/ repo. (OpenFn/docs is open source also, btw.)","ref":"readme.html#development","title":"OpenFn/microservice - Development","type":"extras"}]