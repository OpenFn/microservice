{
  "operations": [
    {
      "name": "fetchData",
      "params": ["params", "postUrl"],
      "docs": {
        "description": "Fetch a dataValueSet",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "fetchData({\n  fields: {\n    dataSet: 'pBOMPrpg1QX',\n    orgUnit: 'DiszpKrYNg8',\n    period: '201401'\n  }},\n  postUrl: \"yourposturl\"\n)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "data to query for events",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "params"
          },
          {
            "title": "param",
            "description": "(optional) URL to post the result",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "name": "postUrl"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "fetchEvents",
      "params": ["params", "postUrl"],
      "docs": {
        "description": "Fetch an event",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "fetchEvents({\n  fields: {\n    orgUnit: 'DiszpKrYNg8',\n    period: '201401'\n  }},\n  postUrl: \"yourposturl\"\n)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "data to query for events",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "params"
          },
          {
            "title": "param",
            "description": "(optional) URL to post the result",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "name": "postUrl"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "event",
      "params": ["eventData"],
      "docs": {
        "description": "Create an event",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "event(eventData)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "Payload data for the event",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "eventData"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "dataValueSet",
      "params": ["data"],
      "docs": {
        "description": "Send data values using the dataValueSets resource",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "dataValueSet({\n   dataSet: dataValue(\"set\"),\n   orgUnit: \"DiszpKrYNg8\",\n   period: \"201402\",\n   completeData: \"2014-03-03\",\n   dataValues: [\n     dataElement(\"f7n9E0hX8qk\", dataValue(\"name\")),\n     dataElement(\"Ix2HsbDMLea\", dataValue(\"age\")),\n     dataElement(\"eY5ehpbEsB7\", 30)\n   ]\n});"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "Payload data for the data value set",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "data"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "dataElement",
      "params": ["dataElement", "value", "comment"],
      "docs": {
        "description": "Create a \"dataElement\" pairing for DHIS2.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "dataElement(key, value)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "Payload data for the Data Element key",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "dataElement"
          },
          {
            "title": "param",
            "description": "Payload data for the Data Element value",
            "type": {
              "type": "NameExpression",
              "name": "variable"
            },
            "name": "value"
          },
          {
            "title": "param",
            "description": "comment for the Data Element",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "comment"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "createTEI",
      "params": ["data"],
      "docs": {
        "description": "Create one or many new Tracked Entity Instances",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "createTEI(data)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "Payload data for new tracked entity instance(s)",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "data"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "updateTEI",
      "params": ["tei", "data"],
      "docs": {
        "description": "Update existing Tracked Entity Instances",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "updateTEI(tei, data)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "identifier for the TEI to be updated",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "tei"
          },
          {
            "title": "param",
            "description": "Payload data for updating a TEI",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "data"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "enroll",
      "params": ["tei", "enrollmentData"],
      "docs": {
        "description": "Enroll a tracked entity instance in a program",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "enroll(tei, enrollmentData)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "tei"
          },
          {
            "title": "param",
            "description": "Payload data for new enrollment",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "enrollmentData"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "fetchAnalytics",
      "params": ["params", "postUrl"],
      "docs": {
        "description": "Fetch analytics",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "fetchAnalytics({\n  query: {\n    dimension: [\"dx:CYI5LEmm3cG\", \"pe:LAST_6_MONTHS\"],\n    filter: \"ou:t7vi7vJqWvi\",\n    displayProperty: \"NAME\",\n    outputIdScheme: \"UID\"\n  }},\n  postUrl: \"yourposturl\"\n)"
          },
          {
            "title": "constructor",
            "description": null,
            "type": null,
            "name": null
          },
          {
            "title": "param",
            "description": "data to query for events",
            "type": {
              "type": "NameExpression",
              "name": "object"
            },
            "name": "params"
          },
          {
            "title": "param",
            "description": "(optional) URL to post the result",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "name": "postUrl"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    }
  ],
  "exports": [[]],
  "common": []
}
