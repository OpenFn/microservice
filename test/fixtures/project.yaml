jobs:
  job-1:
    expression: >
      alterState(state => {
        state.data.number = state.data.number * 2
        return state;
      })
    adaptor: '@openfn/language-common'
    trigger: trigger-2
  job-2:
    expression: none
    credential: my-secret-credential
    adaptor: '@openfn/language-common'
    trigger: trigger-3
  cron-style-job:
    expression: >
      alterState((state) => {
        console.log("Hi there!")
        return state;
      })
    adaptor: '@openfn/language-common'
    trigger: trigger-4
  flow-job:
    expression: >
      alterState(state => {
        state.data.b = state.data.b * 3
        return state;
      })
    adaptor: '@openfn/language-common'
    trigger: after-job-2
  bad-job:
    expression: >
      alterState(state => throw "oops")
    adaptor: '@openfn/language-common'
    trigger: trigger-x
  catch-job:
    expression: >
      alterState(state => {
        state.message = "handled it."
        return state;
      })
    adaptor: '@openfn/language-common'
    trigger: after-failure

triggers:
  trigger-2:
    criteria: '{"number":2}'
  trigger-3:
    criteria: '{"b":2}'
  trigger-4:
    cron: '* * * * *'
  after-job-2:
    success: job-2
  trigger-x:
    criteria: '{"premonition": "failure"}'
  after-failure:
    failure: bad-job

credentials:
  my-secret-credential:
    username: 'user@example.com'
    password: 'shhh'
